setwd("~/github/mollR/R")
tangram_to_df <- function(tbl){
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
if(add_rown){
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1) %>%
mutate(id = dplyr::row_number())
} else {
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl1df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
}
return(tbl_df)
}
#' tangram_to_df
#'
#' This function converts a `tangram` object to dataframe. Will be in html format.
#' @param tbl a `tangram` object (table)
#' @param add_rown logical. Whether to add a row id (`id`) to the output dataframe
#' @param html logical. Whether to include html code for indentation.
#' @export
#' @examples
library(tangram)
tab <- tangram(Species ~ Sepal.Width + Sepal.Length, test = T, data = iris)
tab
?iris
?tangram
tab <- tangram(Species ~ Sepal.Width + Sepal.Length, test = T, data = iris, style = "lancet")
tab
tab <- tangram(Species ~ Sepal.Width + Sepal.Length, test = T, data = iris)
tangram_to_df <- function(tbl, add_rown = FALSE, html = TRUE){
if(missing(tbl)) stop("must provide argument tbl")
if(all(class(tbl) != "tangram")) stop("tbl must be a tangram object")
if(html){
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
} else {
browser()
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
}
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
if(add_rown){
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1) %>%
mutate(id = dplyr::row_number())
} else {
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl1df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
}
return(tbl_df)
}
tangram(tbl = tab, html = F)
tangram_to_df(tbl = tab, html = F)
tbl
Map(function(x) {x[[1]] <- gsub("  ",
"",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
Map(function(x) { x <- gsub("^ +", "", x); x },
tbl)
Map(function(x) {  x },
tbl)
Map(function(x) {x[[1]] <- gsub("  ",
"test",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
head(iris)
head(Titanic)
head(cars)
head(mtcars)
tab <- tangram(gear ~ mpg + cyl, test = T, data = mtcars)
?mtcars
tangram_to_df <- function(tbl, add_rown = FALSE, html = TRUE){
if(missing(tbl)) stop("must provide argument tbl")
if(all(class(tbl) != "tangram")) stop("tbl must be a tangram object")
if(html){
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
} else {
browser()
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"test",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
}
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
if(add_rown){
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1) %>%
mutate(id = dplyr::row_number())
} else {
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl1df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
}
return(tbl_df)
}
tangram_to_df(tbl = tab, html = F)
tbl
head(mtcars)
table(mtcars$gear)
tab <- tangram(factor(gear) ~ mpg + cyl, test = T, data = mtcars)
tab
tab <- tangram(factor(gear) ~ mpg + Categorical::cyl, test = T, data = mtcars)
tab <- tangram(factor(gear) ~ mpg + Categorical:::cyl, test = T, data = mtcars)
tab <- tangram(factor(gear) ~ mpg + categorical:::cyl, test = T, data = mtcars)
tab <- tangram(factor(gear) ~ mpg + cyl:::Categorical, test = T, data = mtcars)
tab <- tangram(factor(gear) ~ mpg + factor(cyl), test = T, data = mtcars)
tab
?tangram
tab <- tangram(factor(gear) ~ mpg + cyl::Categorical, test = T, data = mtcars)
tab
tangram("drug~bili+albumin+stage::Categorical+protime+sex+age+spiders", pbc,"mytbl3")
tangram(drug ~ bili + albumin + protime + sex + age + spiders, pbc, id="mytbl2")
tab <- tangram(drug~bili+albumin+stage::Categorical+protime+sex+age+spiders, pbc,"mytbl3")
tab <- tangram(drug~bili+albumin+stage::Categorical+protime+sex+age+spiders,
data = pbc,
style = "lancet",
id = "mytbl3")
tab
tangram_to_df <- function(tbl, add_rown = FALSE, html = TRUE){
if(missing(tbl)) stop("must provide argument tbl")
if(all(class(tbl) != "tangram")) stop("tbl must be a tangram object")
if(html){
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
} else {
browser()
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"test",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
}
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
if(add_rown){
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1) %>%
mutate(id = dplyr::row_number())
} else {
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl1df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
}
return(tbl_df)
}
tangram_to_df(tbl = tab, html = F)
tbl
Map(function(x) {x[[1]] <- gsub("  ",
"test",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
Map(function(x) {x <- gsub("^ +", "", x); x },
tbl)
Map(function(x) {x },
tbl)
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"test",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
tbl_list
Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]); x },
tbl)
Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]); x },
tbl)
Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]); x <- gsub("^ +", "", x);},
tbl)
Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]);},
tbl)
Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]);  x },
tbl)
Map(function(x) {browser() x[[1]] <- gsub("  ",
"  ",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
Map(function(x) {browser(); x[[1]] <- gsub("  ",
"  ",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
x
x[[1]]
x
Map(function(x) {browser();x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
tangram_to_df(tbl = tab, html = F)
Map(function(x) {browser();x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
x
x[[1]]
gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]])
gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]) %>% print
gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]) %>% View
tangram_to_df <- function(tbl, add_rown = FALSE, html = TRUE){
if(missing(tbl)) stop("must provide argument tbl")
if(all(class(tbl) != "tangram")) stop("tbl must be a tangram object")
if(html){
anon <- function(x) {
browser()
x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]])
x <- gsub("^ +", "", x)
x
}
tbl_list <- Map(anon,
tbl)
} else {
browser()
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
}
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
if(add_rown){
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1) %>%
mutate(id = dplyr::row_number())
} else {
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl1df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
}
return(tbl_df)
}
tangram_to_df(tbl = tab, html = T)
x
x[[1]]
x
tangram_to_df <- function(tbl, add_rown = FALSE, html = TRUE){
if(missing(tbl)) stop("must provide argument tbl")
if(all(class(tbl) != "tangram")) stop("tbl must be a tangram object")
if(html){
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
} else {
browser()
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
}
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
if(add_rown){
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1) %>%
mutate(id = dplyr::row_number())
} else {
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl1df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
}
return(tbl_df)
}
tangram_to_df(tbl = tab, html = T)
tangram_to_df(tbl = tab, html = F)
Map(function(x) {unlist(x)},
tbl)
Map(function(x) {x[[1]] <- gsub("  ",
"  ",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
Map(unlist,
tbl)
tangram_to_df <- function(tbl, add_rown = FALSE, html = TRUE){
if(missing(tbl)) stop("must provide argument tbl")
if(all(class(tbl) != "tangram")) stop("tbl must be a tangram object")
if(html){
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
} else {
tbl_list <- Map(unlist,
tbl)
}
browser()
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
if(add_rown){
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1) %>%
mutate(id = dplyr::row_number())
} else {
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl1df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
}
return(tbl_df)
}
tangram_to_df(tbl = tab, html = T)
tbl_list
data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
tbl_df %>%
`names<-`(c("Variables", "N", tbl1df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
tangram_to_df <- function(tbl, add_rown = FALSE, html = TRUE){
if(missing(tbl)) stop("must provide argument tbl")
if(all(class(tbl) != "tangram")) stop("tbl must be a tangram object")
if(html){
tbl_list <- Map(function(x) {x[[1]] <- gsub("  ",
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
x[[1]]); x <- gsub("^ +", "", x); x },
tbl)
} else {
tbl_list <- Map(unlist,
tbl)
}
tbl_df <- data.frame(matrix(
unlist(tbl_list),
nrow=length(tbl_list),
byrow=TRUE))
if(add_rown){
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1) %>%
mutate(id = dplyr::row_number())
} else {
tbl_df <- tbl_df %>%
`names<-`(c("Variables", "N", tbl_df[1,][3:ncol(.)])) %>%
dplyr::slice(-1)
}
return(tbl_df)
}
tangram_to_df(tbl = tab, html = T)
tangram_to_df(tbl = tab, html = F)
devtools::document()
